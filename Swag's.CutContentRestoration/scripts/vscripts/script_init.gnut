untyped

global function SwagScriptInit
//global function SwagDevMenu
global function SwagIcepickMenu
global function addMenus
global function Swag_CMD
global function r1_SpawnNPC
global function r1_SetNPCTeam
global function r1_SetNPCWeapon
global string r1_npc_weapon = "default"
global int r1_npc_team = TEAM_IMC;

//The way I handle making the releases is by commenting out the weapons in SwagIcepickMenu() that aren't ready yet before zipping it up
//Not all weapons here will work


//________________________________________________________________________________________________________________

void function SwagScriptInit()
{
	//SwagDevMenu()
	SwagIcepickMenu()
	addMenus()
}

//________________________________________________________________________________________________________________

//void function SwagDevMenu() //For dev menu to work without launch params (but it doesn't fucking work rn)
//{
	//Normal Launch Params:
	//-dev +developer 1
	
	//DEV = true
	//developer = "1"
//}

//________________________________________________________________________________________________________________

void function Swag_CMD( string CMD) //Calls commands
{
	#if SERVER
		entity Player = GetPlayerByIndex( 0 );
		
		ClientCommand( Player, CMD ); //Works :D
	#endif
}

//________________________________________________________________________________________________________________

void function addMenus()
{
	//AddMenu( "ExtrasMenu", $"resource/ui/menus/dialog_pathchooser.menu" )
}
//AddMenu( "ExtrasMenu", $"resource/ui/menus/dialog_pathchooser.menu" )
//________________________________________________________________________________________________________________

void function r1_SpawnNPC( string ai_to_spawn ) //Thx thylord <3
{
#if SERVER
	entity player = GetPlayerByIndex( 0 );
	vector eyePosition = player.EyePosition();
	vector viewVector = player.GetViewVector();
	TraceResults traceResults = TraceLineHighDetail( eyePosition, eyePosition + viewVector * 10000, player, TRACE_MASK_PLAYERSOLID, TRACE_COLLISION_GROUP_PLAYER );
	if( traceResults.hitEnt )
	{
		vector Position = traceResults.endPos;
		entity npc = CreateNPCFromAISettings( ai_to_spawn, r1_npc_team, Position, < 0, 0, 0 > )
		if ( r1_npc_weapon != "default" ) 
		{
			SetSpawnOption_Weapon( npc,r1_npc_weapon );
		}
		DispatchSpawn( npc )
		
		if ( ai_to_spawn == "npc_soldier_blisk" )
		{
			npc.SetModel( $"models/humans/heroes/imc_hero_blisk.mdl" )
		}
		
		if ( ai_to_spawn == "npc_titan_ogre" )
		{
			npc.SetModel( $"models/titans/ogre/ogre_titan.mdl" )
		}
		
		if ( ai_to_spawn == "npc_titan_atlas" )
		{
			npc.SetModel( $"models/titans/atlas/atlas_titan.mdl" )
		}
		
		if ( ai_to_spawn == "npc_titan_stryder" )
		{
			npc.SetModel( $"models/titans/stryder/stryder_titan.mdl" )
		}
		
		if ( ai_to_spawn == "npc_pilot_elite_assassin_cqb" ) //IMC Pilot
		{
			npc.SetModel( $"models/humans/imc_pilot/male_br/imc_pilot_male_br.mdl" )
		}
		
		if ( ai_to_spawn == "npc_pilot_elite_assassin_sniper" ) //Female Pilot
		{
			npc.SetModel( $"models/humans/pilot/female_br/pilot_female_br.mdl" )
		}
		
		if ( ai_to_spawn == "npc_pilot_elite_assassin" ) //MCOR Pilot
		{
			npc.SetModel( $"models/humans/mcor_pilot/male_br/mcor_pilot_male_br.mdl" )
		}
		
		if ( ai_to_spawn == "npc_soldier_spyglass" ) //Test
		{
			npc.SetModel( $"models/humans/imc_villian/spyglass/imc_villain_spyglass.mdl" )
		}
		
		//if ( ai_to_spawn == "npc_titan_proto_stasisgun" )
		//{
			//npc.SetModel( $"models/titans/destroyer/destroyer_titan.mdl" )
		//}
		
		if ( r1_npc_weapon != "default" ) 
		{
			array<entity> weapons = npc.GetMainWeapons()
			string weapon_name = npc.GetLatestPrimaryWeapon().GetWeaponClassName()
		
			npc.TakeWeaponNow( weapon_name )
			npc.GiveWeapon( r1_npc_weapon )
			npc.SetActiveWeaponByName( r1_npc_weapon )
		}
	}
#endif
}



void function r1_SetNPCTeam( string team ) //Thx thylord <3
{
#if SERVER
	switch (team)
	{
		case "TEAM_MILITIA":
			r1_npc_team = TEAM_MILITIA;
			break;
		case "TEAM_IMC":
			r1_npc_team = TEAM_IMC;
			break;
		case "TEAM_UNASSIGNED":
			r1_npc_team = TEAM_UNASSIGNED;
			break;
		case "TEAM_BOTH":
			r1_npc_team = TEAM_BOTH;
			break;
		case "TEAM_SPECTATOR":
			r1_npc_team = TEAM_SPECTATOR;
			break;
	}
#endif
}

void function r1_SetNPCWeapon( string weapon ) //Thx thylord <3
{
#if SERVER
	r1_npc_weapon = weapon
#endif
}



//________________________________________________________________________________________________________________

void function SwagIcepickMenu()
{
	#if CLIENT
	RegisterSpawnmenuPage( "SwagCutContent", "Cut Content Restoration Mod" );
	//Version
	RegisterPageCategory( "SwagCutContent", "Swag_cred3", "Version 0.5 (PRE-RELEASE, DO NOT SHARE)", "Spawnmenu_SpawnNpc" );
	
	//Fixed Weapons
	RegisterPageCategory( "SwagCutContent", "Swag_wep", "RESTORED WEAPONS", "Spawnmenu_GiveWeapon" );
	RegisterCategoryItem( "Swag_wep", "proto_viewmodel_test", "proto viewmodel \n test" );
	RegisterCategoryItem( "Swag_wep", "mp_weapon_arc_trap", "Arc Trap" );
	RegisterCategoryItem( "Swag_wep", "mp_weapon_mega_turret_s2s", "s2s Mega Turret" );
	RegisterCategoryItem( "Swag_wep", "sp_weapon_swarm_rockets_s2s", "s2s Swarm \n Rockets" );
	RegisterCategoryItem( "Swag_wep", "sp_weapon_viperbossrockets_s2s", "Viper Boss \n Rockets" );
	RegisterCategoryItem( "Swag_wep", "weapon_cubemap", "Dev Cubemap \n Tool" );
	
	//Recreated Weapons
	RegisterPageCategory( "SwagCutContent", "Swag_wep2", "RECREATED WEAPONS", "Spawnmenu_GiveWeapon" );
	RegisterCategoryItem( "Swag_wep2", "mp_weapon_fukuda_br", "Fukuda BR" );								
	RegisterCategoryItem( "Swag_wep2", "mp_weapon_gibber_pistol", "Gibber" );									//TODO
	RegisterCategoryItem( "Swag_wep2", "mp_weapon_flak_rifle", "FLAK-47" );									
	RegisterCategoryItem( "Swag_wep2", "sp_weapon_proto_hold_beam", "Proto Hold Beam" );							//TODO
	RegisterCategoryItem( "Swag_wep2", "mp_weapon_grenade_smoke", "Smoke Grenade" );							//TODO
	RegisterCategoryItem( "Swag_wep2", "mp_weapon_tracking_mine", "Tracking Mine" );							//TODO
	RegisterCategoryItem( "Swag_wep2", "mp_titanweapon_tracking_rifle", "XO Tracker Rifle \n (TITAN)" );				//TODO
	RegisterCategoryItem( "Swag_wep2", "mp_titanweapon_autopistol", "XO-6 Autopistol \n (TITAN)" );				//TODO
	RegisterCategoryItem( "Swag_wep2", "mp_titanweapon_sticky", "Sticky Explosive \n Launcher (TITAN)" );	//TODO
	RegisterCategoryItem( "Swag_wep2", "mp_titanweapon_arc_ball", "Arc Ball \n (TITAN)" );				//TODO
	
	
	//Abilities
	RegisterPageCategory( "SwagCutContent", "Swag_ability", "RESTORED ABILITIES", "Swag_CMD" );
	RegisterCategoryItem( "Swag_ability", "give mp_ability_burncardweapon", "Burncard Ability" );
	RegisterCategoryItem( "Swag_ability", "give mp_ability_turretweapon", "MP Turret \n Placement" );
	RegisterCategoryItem( "Swag_ability", "give mp_ability_pathchooser", "Pathchooser" );
	RegisterCategoryItem( "Swag_ability", "give mp_ability_swordblock pilot_sword", "Pilot \n Swordblock" );
	RegisterCategoryItem( "Swag_ability", "give mp_ability_arc_blast", "Arc Blast" );
	
	//Recreated Abilities
	RegisterPageCategory( "SwagCutContent", "Swag_ability2", "RECREATED ABILITIES", "Spawnmenu_GiveAbility" );
	RegisterCategoryItem( "Swag_ability2", "mp_titanability_grapple", "Titan Grapple \n (TITAN)" );			//TODO
	RegisterCategoryItem( "Swag_ability2", "mp_titanability_tesla_coil", "Arc Tesla Coil \n (TITAN)" );			//TODO
	RegisterCategoryItem( "Swag_ability2", "mp_titanability_grenade_launcher", "Grenade Launcher \n (TITAN)" );			//TODO
	RegisterCategoryItem( "Swag_ability2", "mp_ability_at_mine", "Anti-Titan Mine" );						//TODO
	RegisterCategoryItem( "Swag_ability2", "mp_titanability_dome_shield", "Dome Shield \n (TITAN)" );				//TODO
	RegisterCategoryItem( "Swag_ability2", "mp_titanability_big_dome", "Big Dome \n (TITAN)" );					//TODO
	RegisterCategoryItem( "Swag_ability2", "mp_ability_cloakfield", "Cloakfield" );							//TODO
	RegisterCategoryItem( "Swag_ability2", "mp_ability_ground_slam", "Ground Slam" );							//TODO
	
	//Melee
	RegisterPageCategory( "SwagCutContent", "Swag_melee", "RESTORED MELEE", "Swag_CMD" );
	RegisterCategoryItem( "Swag_melee", "give melee_pilot_kunai", "Pilot Kunai" );
	RegisterCategoryItem( "Swag_melee", "give melee_pilot_sword", "Pilot Sword" );
	RegisterCategoryItem( "Swag_melee", "give melee_pilot_sword allow_as_primary", "Pilot Sword \n (HYBRID)" );
	RegisterCategoryItem( "Swag_melee", "give melee_pilot_sword primary", "Pilot Sword \n (PRIMARY)" );
	RegisterCategoryItem( "Swag_melee", "give melee_titan_punch_fighter beserker", "Bison Melee \n (TITAN)" );
	RegisterCategoryItem( "Swag_melee", "give melee_titan_punch_fighter beserker allow_as_primary", "Bison Melee \n (TITAN) \n (HYBRID)" );
	RegisterCategoryItem( "Swag_melee", "give melee_titan_punch_fighter beserker primary", "Bison Melee \n (TITAN) \n (PRIMARY)" );
	
	//Npcs
	RegisterPageCategory( "SwagCutContent", "Swag_npc", "NPCS", "r1_SpawnNPC" );
	RegisterCategoryItem( "Swag_npc", "npc_soldier_blisk", "Blisk NPC" + " " );
	RegisterCategoryItem( "Swag_npc", "npc_soldier_hero_bear", "Bear NPC" + " " );
	RegisterCategoryItem( "Swag_npc", "npc_soldier_hero_sarah", "Sarah NPC" + " " );
	RegisterCategoryItem( "Swag_npc", "npc_titan_atlas", "Atlas Titan" );
	RegisterCategoryItem( "Swag_npc", "npc_titan_stryder", "Stryder Titan" );
	RegisterCategoryItem( "Swag_npc", "npc_titan_ogre", "Ogre Titan" );
	RegisterCategoryItem( "Swag_npc", "npc_titan_proto_stasisgun", "Proto Stasisgun Titan" );
	RegisterCategoryItem( "Swag_npc", "npc_pilot_elite_assassin_cqb", "IMC Pilot" );
	RegisterCategoryItem( "Swag_npc", "npc_pilot_elite_assassin", "MCOR Pilot" );
	RegisterCategoryItem( "Swag_npc", "npc_pilot_elite_assassin_sniper", "Female Pilot" );
	RegisterCategoryItem( "Swag_npc", "npc_soldier_spyglass", "Spyglass" );
	
	//Functions
	RegisterPageCategory( "SwagCutContent", "Swag_func", "FUNCTIONS", "Swag_CMD" );
	RegisterCategoryItem( "Swag_func", "1", "init Powerups" );
	RegisterCategoryItem( "Swag_func", "2", "Dev Menu \n Shortcut" );
	RegisterCategoryItem( "Swag_func", "givecurrentammo", "Refill Ammo" );
	RegisterCategoryItem( "Swag_func", "impulse 200", "Raise/Lower \n Weapon" );
	
	//Credit
	RegisterPageCategory( "SwagCutContent", "Swag_cred", "Made by: Swagguy47 with help from Thylord", "Spawnmenu_SpawnNpc" );
	RegisterPageCategory( "SwagCutContent", "Swag_cred2", "Thanks for using my mod! <3", "Spawnmenu_SpawnNpc" );

	#endif
}

//________________________________________________________________________________________________________________


		//{
		//	"Path": "ui/menu_swag_pathchooser_dialog.nut",
		//	"RunOn": "SERVER || CLIENT",
		//},
//BACKUP
